Description: >
  This template illustrates how to use AWS CodeBuild and AWS CodePipeline to
  achieve continuous deployment of source code from a CodeCommit repository via a
  Docker container to an Amazon EC2 Container Service cluster.


Parameters:

  CodeCommitRepositoryName:
    Type: String
    Default: webapp
    Description: The repo name of the DotNetWeb App.

  CodeCommitBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.

  SourceBucket:
    Type: String
    Description: Bucket where the templates are located. 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      CodeCommitBranch:
        default: "Branch Name"
      CodeCommitRepositoryName:
        default: "Repository Name"
    ParameterGroups:
      - Label:
          default: CodeCommit Configuration
        Parameters:
          - CodeCommitRepositoryName
          - CodeCommitBranch

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref SourceBucket
            - '/cicd-templates/ecs-cluster.yaml'
      Parameters:
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref SourceBucket
            - '/cicd-templates/deployment-pipeline.yaml'
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        ECSTaskRole: !GetAtt Cluster.Outputs.ECSTaskRoleArn
        CodeCommitRepositoryName: !Ref CodeCommitRepositoryName
        CodeCommitBranch: !Ref CodeCommitBranch
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        TemplateBucket: !Sub ${SourceBucket}

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref SourceBucket
            - '/cicd-templates/load-balancer.yaml'
      Parameters:
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Join
          - ''
          - - 'https://s3.amazonaws.com/'
            - !Ref SourceBucket
            - '/cicd-templates/vpc.yaml'
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24


Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
